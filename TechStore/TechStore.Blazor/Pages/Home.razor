@page "/"
@using TechStore.Blazor.DtoModels.Category
@using TechStore.Blazor.DtoModels.SmartPhone
@using TechStore.Blazor.Interfaces
@inject ICategoryApi CategoryApi
@inject ISmartPhoneApi SmartPhoneApi
@inject IBrandApi BrandApi
@inject IOSApi OSApi
@inject IRamApi RamApi
@inject IMemoryApi MemoryApi
@inject IModelApi ModelApi


<MudCarousel Class="mud-width-full"
             Style="height: 33.33vw; max-height: 400px; min-height: 200px;"
             ShowArrows="@arrows"
             ShowBullets="@bullets"
             EnableSwipeGesture="@enableSwipeGesture"
             AutoCycle="@autocycle"
             Transition="@transition"
             TData="object">

    <!-- Item 1 -->
    <MudCarouselItem>
        <MudContainer Class="d-flex fill-height">
            <img src="images/img3.jpg"
                 alt="Nature wallpaper"
                 class="mud-width-full mud-height-full object-cover" />
        </MudContainer>
    </MudCarouselItem>

    <!-- Item 2 -->
    <MudCarouselItem>
        <MudContainer Class="d-flex fill-height">
            <img src="images/img1.jpg"
                 alt="Second wallpaper"
                 class="mud-width-full mud-height-full object-cover" />
        </MudContainer>
    </MudCarouselItem>

    <!-- Item 3 -->
    <MudCarouselItem>
        <MudContainer Class="d-flex fill-height">
            <img src="images/img2.jpg"
                 alt="Third wallpaper"
                 class="mud-width-full mud-height-full object-cover" />
        </MudContainer>
    </MudCarouselItem>
</MudCarousel>

<MudGrid Class="mt-auto">
    @if (Categories is not null)
    {
        <MudContainer Class="mt-auto">
            <div style="display: flex; align-items: center; justify-content:center">
                <MudIconButton Icon="@Icons.Material.Filled.ChevronLeft" OnClick="ScrollLeft" />

                <div class="hide-scrollbar" style="overflow-x: auto; white-space: nowrap; scroll-behavior: smooth; width: auto;" @ref="scrollContainer">
                    <div style="display: flex; gap: 1rem;">
                        @foreach (var category in Categories)
                        {
                            <MudCard Class="card-hover" Style="min-width: 150px; cursor: pointer; height: auto;" @onclick="@(() => NavigateToCategory(category.Name.ToLower()))">
                                <MudCardContent Style="display: flex; flex-direction: column; justify-content: center; align-items: center; height: 100%; padding: 16px;">
                                    <MudIcon Icon="@category.Icon" Size="Size.Medium" Style="margin-bottom: 8px;" />
                                    <MudText Typo="Typo.h6" Style="margin: 0; text-align: center;">@category.Name</MudText>
                                </MudCardContent>
                            </MudCard>
                        }
                    </div>
                </div>

                <MudIconButton Icon="@Icons.Material.Filled.ChevronRight" OnClick="ScrollRight" />
            </div>
        </MudContainer>
    }
</MudGrid>

<div style="display: flex; flex-direction: column; gap: 0;">
    <!-- Main Content: Filter + Products (inside SAME MudContainer) -->
    <MudContainer MaxWidth="MaxWidth.False" Style="max-width: 1200px; margin: 0 auto; padding: 0;">
        <div style="display: flex; gap: 5px;">

            <!-- Right: Smartphones -->
            <div style="flex: 1;">
                <MudGrid GutterSize="3">
                    @if (SmartPhones is not null)
                    {
                        @foreach (var phone in SmartPhones)
                        {
                            <MudItem xs="12" sm="6" md="4" lg="3">
                                <MudCard Class="product-card"
                                         Style="height: 100%; width: 100%;max-width: 300px;"
                                         @onclick="@(() => NavigateToSmartPhone(phone))">
                                    <MudChip T="bool"
                                             Color="@(phone.IsAvailable ? Color.Success : Color.Error)"
                                             Variant="Variant.Filled"
                                             Class="ml-2 mt-2 availability-chip"
                                             Style="color: white; z-index: 2; box-shadow: 0 2px 4px rgba(0,0,0,0.2);">
                                        @(phone.IsAvailable ? "Առկա է" : "Առկա չէ")
                                    </MudChip>

                                    @*  <div class="image-container"
                                         style="width: 100%;aspect-ratio: 1;overflow: hidden;display: flex;justify-content: center;align-items: center;background-color: #f5f5f5;">
                                        <MudCardMedia Image="@phone.ImageUrl"
                                                      Style="width: 100%;height: 100%; object-fit: cover;" />
                                    </div> *@
                                    <div class="image-container"
                                         style="width: 100%;aspect-ratio: 1;display: flex;justify-content: center;align-items: center;">
                                        <MudCardMedia Image="@phone.ImagesUrls.First()" Class="product-image" Style="width: 100%;height: 100%; object-fit: cover;" />
                                    </div>


                                    <MudCardContent Class="px-4 pt-3 pb-1">
                                        <MudText Typo="Typo.h6" Class="product-name">@phone.Name</MudText>
                                        <MudText Typo="Typo.body2" Class="mb-2 product-description">@phone.Description</MudText>
                                        <MudText Typo="Typo.subtitle1" Color="Color.Primary" Class="price-text">
                                            @($"{phone.Price:C}")
                                        </MudText>
                                    </MudCardContent>

                                    <MudCardActions Class="px-4 pb-3">
                                        <MudButton Variant="Variant.Filled"
                                                   Color="Color.Primary"
                                                   EndIcon="@Icons.Material.Filled.ShoppingCart"
                                                   Class="buy-button"
                                                   Disabled="@(!phone.IsAvailable)">
                                            @(phone.IsAvailable ? "Add to Cart" : "Out of Stock")
                                        </MudButton>
                                    </MudCardActions>
                                </MudCard>
                            </MudItem>
                        }
                    }
                </MudGrid>
            </div>

        </div>
    </MudContainer>
</div>

@code {
    [Inject] private NavigationManager Nav { get; set; } = default!;
    public List<CategoryDto> Categories { get; set; } = new List<CategoryDto>();
    public List<SmartPhoneDto> SmartPhones { get; set; } = new List<SmartPhoneDto>();
    private ElementReference scrollContainer;
    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Fade;

    private Dictionary<string, string> _categoryUrlMap = new()
    {
        { "հեռախոսներ","smartphones" },
        { "նոթբուքներ", "laptops" },
        { "հեռուստացույցներ", "tvs" },
        // Add more as needed
    };


    [Inject] private IJSRuntime JS { get; set; } = default!;

    private async Task ScrollLeft()
    {
        await JS.InvokeVoidAsync("scrollElementBy", scrollContainer, -300);
    }

    private async Task ScrollRight()
    {
        await JS.InvokeVoidAsync("scrollElementBy", scrollContainer, 300);
    }

    protected override async Task OnInitializedAsync()
    {
        Categories = (await CategoryApi.GetCategories()).ToList();
        SmartPhones = (await SmartPhoneApi.GetSmartPhones()).ToList();
        foreach (var category in Categories)
        {
            category.Icon = GetCategoryIcon(category.Name);
        }
        
    }

    private string GetCategoryIcon(string categoryName)
    {
        var lowerName = categoryName.ToLower();

        return lowerName switch
        {
            "հեռախոսներ" => Icons.Material.Filled.PhoneIphone,
            "նոթբուքներ" => Icons.Material.Filled.Laptop,
            "հեռուստացույցներ" => Icons.Material.Filled.Tv,
            _ => Icons.Material.Filled.DeviceUnknown// Default icon
        };
    }

    void NavigateToCategory(string categoryName)
    {
        if (_categoryUrlMap.TryGetValue(categoryName, out var urlSlug))
        {
            Nav.NavigateTo($"category/{urlSlug}");
        }
        else
        {
            Nav.NavigateTo($"category/{Uri.EscapeDataString(categoryName.ToLower())}");
        }
    }
    void NavigateToSmartPhone(SmartPhoneDto smartPhoneDto)
    {
        Nav.NavigateTo($"smartphones/{smartPhoneDto.Id}");
    }
}