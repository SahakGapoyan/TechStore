@page "/category/smartphones"
@using TechStore.Blazor.Apis
@using TechStore.Blazor.DtoModels.Category
@using TechStore.Blazor.DtoModels.SmartPhone
@using TechStore.Blazor.Interfaces
@inject ICategoryApi CategoryApi
@inject ISmartPhoneApi SmartPhoneApi
<h3>Հեռախոսներ</h3>

<MudGrid Class="mt-auto">
    @if (Categories is not null)
    {
        <MudContainer Class="mt-auto">
            <div style="display: flex; align-items: center; justify-content:center">
                <MudIconButton Icon="@Icons.Material.Filled.ChevronLeft" OnClick="ScrollLeft" />

                <div class="hide-scrollbar" style="overflow-x: auto; white-space: nowrap; scroll-behavior: smooth; width: auto;" @ref="scrollContainer">
                    <div style="display: flex; gap: 1rem;">
                        @foreach (var category in Categories)
                        {
                            <MudCard Class="card-hover" Style="min-width: 150px; cursor: pointer; height: auto;" @onclick="@(() => NavigateToCategory(category.Name.ToLower()))">
                                <MudCardContent Style="display: flex; flex-direction: column; justify-content: center; align-items: center; height: 100%; padding: 16px;">
                                    <MudIcon Icon="@category.Icon" Size="Size.Medium" Style="margin-bottom: 8px;" />
                                    <MudText Typo="Typo.h6" Style="margin: 0; text-align: center;">@category.Name</MudText>
                                </MudCardContent>
                            </MudCard>
                        }
                    </div>
                </div>

                <MudIconButton Icon="@Icons.Material.Filled.ChevronRight" OnClick="ScrollRight" />
            </div>
        </MudContainer>
    }
</MudGrid>

<MudContainer Class="mt-auto" Style="justify-content:center">

    <MudGrid GutterSize="3">
        @if (SmartPhones is not null)
        {
            @foreach (var phone in SmartPhones)
            {
                <MudItem xs="12" sm="6" md="4" lg="3">
                    <MudCard Class="product-card"
                             Style="height: 100%; width: 100%; max-width: 300px;"
                             OnClick="@(() => NavigateToSmartPhone(phone))">
                        <!-- Availability Chip with shadow -->
                        <MudChip T="bool"
                                 Color="@(phone.IsAvailable ? Color.Success : Color.Error)"
                                 Variant="Variant.Filled"
                                 Class="ml-2 mt-2 availability-chip"
                                 Style="color: white; z-index: 2; box-shadow: 0 2px 4px rgba(0,0,0,0.2);">
                            @(phone.IsAvailable ? "In Stock" : "Out of Stock")
                        </MudChip>

                        <!-- Image with hover zoom effect -->
                        <div class="image-container">
                            <MudCardMedia Image="@phone.ImageUrl" Class="product-image" Height="300" />
                        </div>

                        <!-- Card Content -->
                        <MudCardContent Class="px-4 pt-3 pb-1">
                            <MudText Typo="Typo.h6" Class="product-name">@phone.Name</MudText>
                            <MudText Typo="Typo.body2" Class="mb-2 product-description">@phone.Description</MudText>
                            <MudText Typo="Typo.subtitle1" Color="Color.Primary" Class="price-text">
                                @($"{phone.Price:C}")
                            </MudText>
                        </MudCardContent>

                        <!-- Animated Buy Button -->
                        <MudCardActions Class="px-4 pb-3">
                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       EndIcon="@Icons.Material.Filled.ShoppingCart"
                                       Class="buy-button"
                                       Disabled="@(!phone.IsAvailable)">
                                @(phone.IsAvailable ? "Add to Cart" : "Out of Stock")
                            </MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        }
    </MudGrid>
</MudContainer>


@code {
    [Inject] private NavigationManager Nav { get; set; } = default!;
    public List<CategoryDto> Categories { get; set; } = new List<CategoryDto>();
    public List<SmartPhoneDto> SmartPhones { get; set; } = new List<SmartPhoneDto>();
    private ElementReference scrollContainer;
    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Fade;

    private Dictionary<string, string> _categoryUrlMap = new()
    {
        { "հեռախոսներ","smartphones" },
        { "նոթբուքներ", "laptops" },
        { "հեռուստացույցներ", "tvs" },
        // Add more as needed
    };

    [Inject] private IJSRuntime JS { get; set; } = default!;

    private async Task ScrollLeft()
    {
        await JS.InvokeVoidAsync("scrollElementBy", scrollContainer, -300);
    }

    private async Task ScrollRight()
    {
        await JS.InvokeVoidAsync("scrollElementBy", scrollContainer, 300);
    }

    protected override async Task OnInitializedAsync()
    {
        Categories = (await CategoryApi.GetCategories()).ToList();
        SmartPhones = (await SmartPhoneApi.GetSmartPhones()).ToList();
        foreach (var category in Categories)
        {
            category.Icon = GetCategoryIcon(category.Name);
        }
    }
    private string GetCategoryIcon(string categoryName)
    {
        var lowerName = categoryName.ToLower();

        return lowerName switch
        {
            "հեռախոսներ" => Icons.Material.Filled.PhoneIphone,
            "համակարգիչներ" => Icons.Material.Filled.Laptop,
            "հեռուստացույցներ" => Icons.Material.Filled.Tv,
            _ => Icons.Material.Filled.DeviceUnknown// Default icon
        };
    }
    void NavigateToCategory(string categoryName)
    {
        if (_categoryUrlMap.TryGetValue(categoryName, out var urlSlug))
        {
            Nav.NavigateTo($"category/{urlSlug}");
        }
        else
        {
            Nav.NavigateTo($"category/{Uri.EscapeDataString(categoryName.ToLower())}");
        }
    }
    void NavigateToSmartPhone(SmartPhoneDto smartPhoneDto)
    {

    }
}
