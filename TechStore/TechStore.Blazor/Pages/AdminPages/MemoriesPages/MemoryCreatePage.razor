@page "/memories/create"
@using TechStore.Blazor.DtoModels.Memory
@using TechStore.Blazor.DtoModels.Ram
@using TechStore.Blazor.DtoModels.Result
@using TechStore.Blazor.Interfaces
@inject IMemoryApi MemoryApi

<MudForm @ref="_form" Model="MemoryAddDto">
<MudPaper Elevation="5" Class="pa-8 mx-auto" Style="max-width: 600px; margin-top: 24px;">
    <MudText Typo="Typo.h5" Class="mb-6 d-flex align-center">
        <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-2" />
        Ավելացնել Նոր Հիշողություն
    </MudText>

    <MudGrid>
        <MudItem xs="12" md="6" Class="pr-md-4">
            <MudTextField @bind-Value="MemoryAddDto.Size"
                          Label="Ծավալը"
                          Variant="Variant.Outlined"
                          Class="mb-4"
                          For="@(()=>MemoryAddDto.Size)"
                          Required
                          FullWidth />
        </MudItem>
    </MudGrid>

    <div class="d-flex justify-end mt-4">
        <MudButton OnClick="NavigateBack"
                   Color="Color.Default"
                   Variant="Variant.Text"
                   Class="mr-2">
            Չեղարկել
        </MudButton>
            <MudButton OnClick="SubmitForm"
                   Color="Color.Primary"
                   Variant="Variant.Filled"
                   EndIcon="@Icons.Material.Filled.Save"
                   Class="ml-2">
            Ստեղծել Հիշողություն
        </MudButton>
    </div>
        @if (!_formIsValid && _formValidated)
        {
            <MudAlert Severity="Severity.Error" Class="mb-4">
                Խնդրում ենք լրացնել բոլոր պարտադիր դաշտերը ճիշտ ձևով։
            </MudAlert>
        }

        @if (!_formIsValid && _formValidated)
        {
            <MudAlert Severity="Severity.Error" Class="mb-4">
                Խնդրում ենք լրացնել բոլոր պարտադիր դաշտերը ճիշտ ձևով։
            </MudAlert>
        }
        @if (_hasValidationErrors)
        {
            <MudAlert Severity="Severity.Error" Class="mb-4">
                <MudText>Խնդրում ենք շտկել հետևյալ սխալները:</MudText>
                <ul>
                    @foreach (var error in _validationErrors)
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </MudAlert>
        }

        @if (!string.IsNullOrEmpty(_apiErrorMessage))
        {
            <MudAlert Severity="Severity.Error" Class="mb-4">
                @_apiErrorMessage
            </MudAlert>
        }
</MudPaper>
</MudForm>

@code {
    [Inject] private NavigationManager Nav { get; set; } = default!;
    private MemoryAddDto MemoryAddDto { get; set; } = new MemoryAddDto();

        private MudForm _form;
        private bool _formValidated = false;
        private bool _formIsValid = false;

    private List<ValidationError> _validationErrors = new();
    private bool _hasValidationErrors = false;
    private string _apiErrorMessage = string.Empty;

        private async Task SubmitForm()
        {
        _formValidated = true;
        await _form.Validate();
        _formIsValid = _form.IsValid;
        _hasValidationErrors = false;
        _validationErrors.Clear();
        _apiErrorMessage = string.Empty;

        if (_formIsValid)
        {
            var result = await MemoryApi.AddMemory(MemoryAddDto);

            if (result.Success)
            {
                Nav.NavigateTo("laptops");
            }
            else if (result.ValidationErrors != null && result.ValidationErrors.Any())
            {
                _hasValidationErrors = true;
                _validationErrors = result.ValidationErrors;
            }
            else
            {
                _apiErrorMessage = result.ErrorMessage ?? "An unknown error occurred";
            }

            StateHasChanged();
        }
        }

    private void NavigateBack()
    {
        Nav.NavigateTo("memories");
    }
}