@page "/LaptopsPage"
<h3>LaptopsPage</h3>
@using TechStore.Blazor.DtoModels.Laptop
@using TechStore.Blazor.Interfaces
@inject ILaptopApi LaptopApi
@inject IDialogService DialogService

<div class="mt-5">
    <MudButton Variant="Variant.Filled"
               Color="Color.Success"
               OnClick="NavigateToCreatePage"
               StartIcon="@Icons.Material.Filled.Add">
        Ավելացնել Նոթբուք
    </MudButton>
</div>
@if (isLoading)
{
    <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
}
else if (Laptops.Count == 0)
{
    <p>Նոթբուքներ չկան</p>
}
else
{
    <MudDataGrid Items="@Laptops" Filterable="false" SortMode="@SortMode.None" Groupable="false">
        <Columns>
            <PropertyColumn Property="x => x.Id" />
            <PropertyColumn Property="x => x.Name" />
            <PropertyColumn Property="x => x.Price" />
            <PropertyColumn Property="x => x.IsAvailable" />
            <PropertyColumn Property="x => x.CategoryId" />
            <PropertyColumn Property="x => x.Processor" />
            <PropertyColumn Property="x => x.RamId" />
            <PropertyColumn Property="x => x.ColorId" />
            <PropertyColumn Property="x => x.MemoryId" />
            <PropertyColumn Property="x => x.ModelId" />
            <PropertyColumn Property="x => x.BrandId" />
            <PropertyColumn Property="x => x.IsAvailable" />
            <TemplateColumn Title="Images">
                <CellTemplate>
                    @if (context.Item.ImagesUrls != null && context.Item.ImagesUrls.Any())
                    {
                        <ul>
                            @foreach (var url in context.Item.ImagesUrls)
                            {
                                <li><a href="@url" target="_blank">@url</a></li>
                            }
                        </ul>
                    }
                    else
                    {
                        <em>Ոչ մի նկար չկա</em>
                    }
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="x => x.ScreenSize" />
            <PropertyColumn Property="x => x.GPU" />
            <PropertyColumn Property="x => x.BatteryLifeInHours" />
            <PropertyColumn Property="x => x.HasTouchScreen" />
            <PropertyColumn Property="x => x.HasFingerprintSensor" />

            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudStack Row>
                        <MudButton OnClick="@(() => OpenEditPage(context.Item))"
                                   Size="@Size.Small"
                                   Variant="@Variant.Filled"
                                   Color="@Color.Primary">
                            Փոփոխել
                        </MudButton>
                        <MudButton OnClick="@(() => ShowDeleteConfirmation(context.Item.Id))"
                                   Size="@Size.Small"
                                   Variant="@Variant.Filled"
                                   Color="@Color.Error">
                            Ջնջել
                        </MudButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
}
@code {
    [Inject] private NavigationManager Nav { get; set; } = default!;
    private bool isLoading = true;
    public List<LaptopDto> Laptops { get; set; } = new List<LaptopDto>();

    override protected async Task OnInitializedAsync()
    {
        Laptops = (await LaptopApi.GetLaptops()).ToList();
        isLoading = false;
    }

    private void OpenEditPage(LaptopDto laptopDto)
    {
        if (laptopDto == null)
        {
            return;
        }
        Nav.NavigateTo($"/LaptopsPage/LaptopEditPage/{laptopDto.Id}");
    }

    private async Task ShowDeleteConfirmation(int id)
    {
        bool? result = await DialogService.ShowMessageBox(
            "Հաստատում",
            "Դուք համոզված եք, որ ցանկանում եք ջնջել այս նոթբուքը?",
            yesText: "Ջնջել",
            cancelText: "Չեղարկել");

        if (result == true)
        {
            await DeleteAsync(id);
        }
    }

    private async Task DeleteAsync(int id)
    {
        await LaptopApi.Delete(id);
        Laptops = (await LaptopApi.GetLaptops()).ToList();
    }

    private void NavigateToCreatePage()
    {
        Nav.NavigateTo("/LaptopsPage/LaptopCreatePage");
    }
}