@page "/tvs/edit/{Id::int}"
@using TechStore.Blazor.DtoModels.Brand
@using TechStore.Blazor.DtoModels.Category
@using TechStore.Blazor.DtoModels.Color
@using TechStore.Blazor.DtoModels.Laptop
@using TechStore.Blazor.DtoModels.Model
@using TechStore.Blazor.DtoModels.Tv
@using TechStore.Blazor.Interfaces
@inject ITvApi TvApi
@inject IColorApi ColorApi
@inject ICategoryApi CategoryApi
@inject IBrandApi BrandApi
@inject IModelApi ModelApi
@inject NavigationManager Nav

<MudGrid>
    <MudContainer Class="mt-auto d-flex justify-space-between align-center"
                  Style="padding: 20px; background-color: white; margin: 0 auto; margin-bottom: 1px; width: 100%; position: relative;">
        <MudText Typo="Typo.h5" Class="mb-6 d-flex align-center" Style="align-items:center">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-2" />
            Խմբագրել Հեռուստացույցը
        </MudText>
    </MudContainer>

    <MudContainer Class="d-flex justify-space-between align-center"
                  Style="padding: 16px; background-color: white; margin: 0 auto; margin-bottom: 1px; width: 100%; position: relative;">
        <MudCard Style="width: 100%;">
            <MudCardContent>
                <MudGrid Style="width: 100%;" GutterSize="3">
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="TvDto.Name" Label="Անունը" />
                        <MudTextField @bind-Value="TvDto.PanelType" Label="Գրաֆիկական պրոցեսորը" />
                        <MudTextField @bind-Value="TvDto.ScreenSize" Label="Էկրանի Չափսը" />
                        <MudTextField @bind-Value="TvDto.Price" Label="Գինը" For="@(() => TvDto.Price)" />
                        <MudTextField @bind-Value="TvDto.Description" Label="Նկարագրությունը" Lines="3" />
                        <MudPaper Class="pa-4 mb-4" Elevation="0" Style="border: 1px solid var(--mud-palette-lines-default);">
                            <MudText Typo="Typo.subtitle2" Class="mb-2">Նկարների Հղումները</MudText>

                            @if (TvDto.ImagesUrls != null)
                            {
                                @for (int i = 0; i < TvDto.ImagesUrls.Count; i++)
                                {
                                    var index = i;
                                    <MudGrid Class="mb-2" Spacing="2" Key="@($"image-url-{index}")">
                                        <MudItem xs="11">
                                            <MudTextField @bind-Value="TvDto.ImagesUrls[index]"
                                                          Variant="Variant.Outlined"
                                                          Label="Նկարի Հղումը" />
                                        </MudItem>
                                        <MudItem xs="1" Class="d-flex align-center">
                                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                                           Color="Color.Error"
                                                           OnClick="@(() => RemoveImageUrl(index))" />
                                        </MudItem>
                                    </MudGrid>
                                }
                            }

                            <MudButton Variant="Variant.Text"
                                       Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.Add"
                                       OnClick="AddImageUrl"
                                       Class="mt-2">
                                Ավելացնել Նկարի Հղում
                            </MudButton>
                        </MudPaper>
                        <MudCheckBox @bind-Value="TvDto.IsAvailable" Label="Առկա է" />
                    </MudItem>

                    <MudItem xs="12">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveChanges">
                            Պահպանել
                        </MudButton>
                        <MudButton Variant="Variant.Text" Color="Color.Default" OnClick="Cancel" Class="ml-2">
                            Չեղարկել
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>
    </MudContainer>
</MudGrid>
@code {
    [Parameter] public int Id { get; set; }

    private TvDto TvDto { get; set; } = new TvDto();
    private List<ColorDto> AvailableColors { get; set; } = new List<ColorDto>();
    private List<ModelDto> AvailableModels { get; set; } = new List<ModelDto>();
    private List<BrandDto> AvailableBrands { get; set; } = new List<BrandDto>();
    private List<CategoryDto> AvailableCategories { get; set; } = new List<CategoryDto>();

    protected override async Task OnInitializedAsync()
    {
        TvDto = await TvApi.GetTv(Id);
        TvDto.ImagesUrls ??= new List<string>();
        if (TvDto.ImagesUrls.Count == 0)
        {
            TvDto.ImagesUrls.Add(string.Empty);
        }
        AvailableColors = (await ColorApi.GetColors()).ToList();
        AvailableModels = (await ModelApi.GetModels()).ToList();
        AvailableBrands = (await BrandApi.GetBrands()).ToList();
    }

    private void AddImageUrl()
    {
        if (TvDto.ImagesUrls == null)
        {
            TvDto.ImagesUrls = new List<string>();
        }

        TvDto.ImagesUrls.Add(string.Empty);
    }

    private void RemoveImageUrl(int index)
    {
        if (TvDto.ImagesUrls == null ||
        index < 0 ||
        index >= TvDto.ImagesUrls.Count)
        {
            return;
        }

        TvDto.ImagesUrls.RemoveAt(index);

        if (TvDto.ImagesUrls.Count == 0)
        {
            TvDto.ImagesUrls.Add(string.Empty);
        }
    }

    private async Task SaveChanges()
    {
        var tvUpdateDto = new TvUpdateDto
            {
                Name = TvDto.Name,
                Price = TvDto.Price,
                ColorId = TvDto.ColorId,
                ModelId = TvDto.ModelId,
                BrandId = TvDto.BrandId,
                IsAvailable = TvDto.IsAvailable,
                ImagesUrls = TvDto.ImagesUrls,
                PanelType = TvDto.PanelType,
                CategoryId = TvDto.CategoryId,
                IsSmartTv = TvDto.IsSmartTv
            };
        await TvApi.UpdateTv(Id, tvUpdateDto);
        Nav.NavigateTo("tvs");
    }

    private void Cancel()
    {
        Nav.NavigateTo("tvs");
    }
        }
